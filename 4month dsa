Sure, I can help you create a four-month schedule for learning data structures and algorithms in Java using free resources. Here's a month-by-month breakdown:

**Month 1: Introduction to Java and Basics of Algorithms**
1. Week 1:
   - Introduction to Java programming language
   - Setting up Java development environment
   - Basic syntax and data types in Java
   - Codecademy's Java course: https://www.codecademy.com/learn/learn-java

2. Week 2:
   - Control structures (if-else, loops, switch)
   - Arrays and ArrayLists in Java
   - Udemy's Java Programming Basics course: https://www.udemy.com/course/java-programming-basics/

3. Week 3:
   - Introduction to algorithms and their analysis
   - Time and space complexity
   - YouTube: "Big O Notation by CS Dojo": https://www.youtube.com/watch?v=D6xkbGLQesk

4. Week 4:
   - Searching algorithms (linear search, binary search)
   - Sorting algorithms (bubble sort, selection sort)
   - GeeksforGeeks: Searching and Sorting in Java: https://www.geeksforgeeks.org/searching-sorting/

**Month 2: Data Structures**
1. Week 1:
   - Linked lists (singly linked list, doubly linked list)
   - YouTube: "Linked List Data Structure by Abdul Bari": https://www.youtube.com/watch?v=njTh_OwMljA

2. Week 2:
   - Stacks and Queues
   - Implementation of stacks and queues in Java
   - YouTube: "Stacks and Queues Data Structure by William Fiset": https://www.youtube.com/watch?v=wjI1WNcIntg

3. Week 3:
   - Trees (binary trees, binary search trees)
   - Tree traversals (preorder, inorder, postorder)
   - YouTube: "Binary Trees Data Structure by CS Dojo": https://www.youtube.com/watch?v=6oL-0TdVy28

4. Week 4:
   - Graphs (adjacency matrix, adjacency list)
   - Graph traversals (DFS, BFS)
   - YouTube: "Graph Data Structure by Abdul Bari": https://www.youtube.com/watch?v=gXgEDyodOJU

**Month 3: Advanced Algorithms**
1. Week 1:
   - Divide and Conquer algorithms
   - Merge sort and quicksort
   - GeeksforGeeks: Divide and Conquer in Java: https://www.geeksforgeeks.org/divide-and-conquer/

2. Week 2:
   - Dynamic Programming
   - Knapsack problem
   - YouTube: "Dynamic Programming by Tushar Roy": https://www.youtube.com/watch?v=ocZMDMZwhCY

3. Week 3:
   - Greedy algorithms
   - Huffman coding
   - YouTube: "Greedy Algorithms by Michael Sambol": https://www.youtube.com/watch?v=ARvQcqJ_-NY

4. Week 4:
   - Backtracking algorithms
   - N-Queens problem
   - YouTube: "Backtracking Algorithm by Jenny's Lectures": https://www.youtube.com/watch?v=DKCbsiDBN6c

**Month 4: Review and Practice**
1. Week 1:
   - Review of all data structures and algorithms covered so far
   - LeetCode: Solve a variety of problems using the concepts learned: https://leetcode.com/problemset/all/

2. Week 2:
   - Practice more coding problems on platforms like HackerRank and Codeforces

3. Week 3:
   - Work on a small project that involves implementing data structures and algorithms in Java

4. Week 4:
   - Final review and preparation for any specific topics you find challenging
   - Take part in online coding contests to test your skills

Remember to practice regularly and stay consistent throughout your learning journey. The provided resources are just suggestions; feel free to explore other materials as well. Good luck with your learning! If you have any questions or need further assistance, feel free to ask.